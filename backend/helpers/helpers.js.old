import Cloud from "@google-cloud/storage";
const { Storage } = Cloud;

// TODO: find better way that doesn't have ./config/ prefix
const key = "./config/just-over-five.json";
const project = "just-over-five";
const storage = new Storage({ "keyFilename": key, "projectId": project });
const bucket = storage.bucket("disks-pending-processing");

const uploadDiskImage = async file => {
  const { originalname, buffer } = file;
  const fileHandle = bucket.file(originalname);
  const [ fileExists ] = await fileHandle.exists();
  if (fileExists === false) {
//    await fileHandle.setMetadata({ "contentType": "application/octet-stream"})
    return fileHandle.save(buffer);
  }
  return new Promise().resolve([]);
};


/*
new Promise((resolve, reject) => {
  const { originalname, buffer } = file;

  const blob = bucket.file(`to-process/` + originalname.replace(/ /g, '_'));
  const blobStream = blob.createWriteStream({ "resumable": false });

  blobStream
    .on('finish', () => {
      resolve(`https://storage.googleapis.com/${bucket.name}/${blob.name}`);
    })
    .on('error', (err) => {
      console.log(err);
      reject(`Issue uploading the image`);
    })
    .end(buffer);
});
*/

export default uploadDiskImage;
